## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

#define ROOT C:\Program Files\nxlog
define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log


## Set the directories you wish to monitor here, separated by |
define DIRS C:\\Windows|D:\\logs

<Extension _syslog>
    Module      xm_syslog
</Extension>

<Extension kvp>
    Module xm_kvp
    KVPDelimiter ,
    KVDelimiter =
    EscapeChar \\
</Extension>

<Input wsa>
    Module  im_msvistalog
    Query   <QueryList>\
              <Query Id="0" Path="Security">\
                <Select Path="Security">*[System[Provider[@Name='Microsoft-Windows-Security-Auditing']]]</Select>\
                <Suppress Path="Security">*[System[(EventID=4663 or EventID=4656)]]</Suppress>\
              </Query>\
            </QueryList>
    #Debating this setting.  The kvp will parse it anyhow....and it makes for way smaller logs
    Exec $Message = '';
    #if defined get_var('ObjectName') AND $ObjectName !~ /^(DIRS)/
    #Lets Blacklist File Reads-Just in case query fails
    Exec if string($EventID) =~ /(4656|4663)/ drop();
    #If there is no filename, then we don't need this event.
    Exec if not defined $ObjectName drop();
    #Not sure if this is smart
    Exec if $ObjectName =~ /\\Temp\\/ drop();
    Exec if $ObjectName =~ /\.(tmp|temp)$/ drop();


    #Remove Fields
    Exec delete($SourceModuleName);
    Exec delete($SourceModuleType);
    Exec delete($AccessReason);
    Exec delete($AccessList);
    Exec delete($ResourceAttributes);
    #Add our own IPs and clean up names
    Exec $LogFrom = host_ip();
    Exec if $TargetServerName == 'localhost' $TargetServerName = $Hostname;
    Exec if $IPAddress == '127.0.0.1' $IPAddress = $Hostname;
    Exec if $IpAddress == '-' AND $WorkstationName != '-' $IPAddress = $WorkstationName; 
    Exec $UnixTime = integer($EventTime);
    Exec $LogTag = 'NxLogWindows';
    #Break to KVP
    Exec    kvp->to_kvp();  $Message = $raw_event; 
</Input>

<Output syslog_host>
    Module      om_udp
    Host        192.168.200.90
    Port        514
    Exec        to_syslog_bsd();
</Output>

<Route 1>
    Path        wsa => syslog_host
</Route>

